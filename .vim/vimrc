if &compatible
  " `:set nocp` has many side effects. Therefore this should be done
  " only when 'compatible' is set.
  set nocompatible
endif

runtime! plugin/sensible.vim

set packpath^=$HOME/.vim
packadd minpac

" Use MinPac plugin manager
if exists('g:loaded_minpac')
  call minpac#init()
  call minpac#add('k-takata/minpac', {'type': 'opt'})

  " Additional plugins here
  call minpac#add('tpope/vim-sensible')
  call minpac#add('tpope/vim-commentary')
  call minpac#add('tpope/vim-surround')
  call minpac#add('tpope/vim-endwise')
  call minpac#add('tpope/vim-eunuch')
  call minpac#add('tpope/vim-fugitive')
  call minpac#add('tpope/vim-rhubarb') " GitHub integration
  call minpac#add('tpope/vim-repeat')
  call minpac#add('tpope/vim-tbone')
  call minpac#add('tpope/vim-rails')
  call minpac#add('tpope/vim-rake')
  call minpac#add('tpope/vim-bundler')
  call minpac#add('tpope/vim-dispatch')
  call minpac#add('tpope/vim-unimpaired')
  call minpac#add('tpope/vim-abolish')
  call minpac#add('tpope/vim-repeat')
  call minpac#add('tpope/vim-projectionist')
  call minpac#add('jiangmiao/auto-pairs')
  call minpac#add('nathanaelkane/vim-indent-guides')
  call minpac#add('mattn/emmet-vim')
  call minpac#add('skywind3000/asyncrun.vim')
  call minpac#add('tommcdo/vim-exchange')
  call minpac#add('andymass/vim-matchup')
  call minpac#add('jeetsukumaran/vim-indentwise')

  " Color
  call minpac#add('sainnhe/gruvbox-material')

  " Finders
  call minpac#add('mileszs/ack.vim')

  " IDE
  if has('nvim')
    " LSP
    call minpac#add('neovim/nvim-lspconfig', {'branch': 'feat/0_7_goodies'})
    call minpac#add('folke/trouble.nvim')
    call minpac#add('kyazdani42/nvim-web-devicons') " Icons for use in trouble.nvim
    call minpac#add('onsails/lspkind-nvim')

    " Completion, Snippets
    call minpac#add('hrsh7th/cmp-buffer')
    call minpac#add('hrsh7th/cmp-nvim-lsp')
    call minpac#add('hrsh7th/cmp-vsnip')
    call minpac#add('hrsh7th/nvim-cmp')
    call minpac#add('hrsh7th/vim-vsnip')
    call minpac#add('hrsh7th/vim-vsnip-integ')
    call minpac#add('rafamadriz/friendly-snippets')

    " Telescope with dependencies and a faster backend
    call minpac#add('nvim-lua/popup.nvim')
    call minpac#add('nvim-lua/plenary.nvim')
    call minpac#add('nvim-telescope/telescope.nvim')
    call minpac#add('nvim-telescope/telescope-fzy-native.nvim')

    " TreeSitter
    call minpac#add('nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'})
    call minpac#add('nvim-treesitter/playground')
    call minpac#add('nvim-treesitter/nvim-treesitter-refactor')
    call minpac#add('nvim-treesitter/nvim-treesitter-textobjects')

    " Color
    call minpac#add('rktjmp/lush.nvim')
    call minpac#add('ellisonleao/gruvbox.nvim')
    call minpac#add('marko-cerovac/material.nvim')

    " Misc
    call minpac#add('nvim-neorg/neorg')
    call minpac#add('lewis6991/impatient.nvim')
    call minpac#add('mfussenegger/nvim-lint')
  endif

  " DB
  call minpac#add('tpope/vim-dadbod')
  call minpac#add('kristijanhusak/vim-dadbod-ui')
  call minpac#add('kristijanhusak/vim-dadbod-completion')

  " Test runner
  call minpac#add('vim-test/vim-test')
  call minpac#add('c-brenn/fuzzy-projectionist.vim')

  " Status bar
  " call minpac#add('vim-airline/vim-airline')
  " call minpac#add('vim-airline/vim-airline-themes')

  " Text objects
  call minpac#add('kana/vim-textobj-user')

  " Language-specific
  call minpac#add('sheerun/vim-polyglot') " collection of all language packs
  call minpac#add('lervag/vimtex')

  " Elixir
  call minpac#add('dkuku/vim-projectionist-elixir')
  call minpac#add('andyl/vim-textobj-elixir')

  " Ruby
  call minpac#add('sunaku/vim-ruby-minitest')
  call minpac#add('ecomba/vim-ruby-refactoring')
endif

let mapleader = " "

if has('autocmd')
  filetype plugin indent on
endif

if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

" Environment variables
let $RTP=split(&runtimepath, ',')[0]
let $RC="$HOME/.vim/vimrc"
let $FTP="$HOME/.vim/after/ftplugin"
let $INIT="$HOME/config/nvim/init.vim"

" Basic options
set encoding=utf-8
filetype on
set number relativenumber
set noerrorbells
set noswapfile
set nobackup
set undodir=~/.vim/undodir
set smartcase
set nowrap
set backspace=indent,eol,start
set ruler
set matchpairs+=<:>
set fixendofline
set showcmd
set softtabstop=2
set shiftwidth=2
set expandtab
set smarttab
set foldmethod=syntax
set nofoldenable
set nohlsearch
" set foldlevel=0 " Don't fold the top-level class/module in a file
set textwidth=80
nnoremap Q gq
" Indent the whole file
nnoremap g<C-G> gg=G<C-O><C-O>
" Mouse support in normal and visual modes
set mouse=nv

" Use <C-L> to clear the highlighting of :set hlsearch.
if maparg('<C-L>', 'n') ==# ''
  nnoremap <silent> <C-L> :nohlsearch<C-R>=has('diff')?'<Bar>diffupdate':''<CR><CR><C-L>
endif

" FINDING FILES:
" Usage:
" - Hit tab to :find by partial match
" - Use * to make it fuzzy

" Search down into subfolders
" Provides tab-completion for all file-related tasks
set path+=**
set path-=vendor/bundle/
set tagcase=followscs
set wildmenu
set wildchar=<Tab>
set wildmode=list:longest " default: full

" Ignore irrelevant and vendor directories
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/node_modules/*,*/_site/*,*/vendor/*,*/_build/*,*/deps/*
" Ignore static asset files
set wildignore+=*/*.png,*/*.jpg,*/*.jpeg
set infercase
" Autocomplete remappings (saves a keystroke (^X))
inoremap ^L ^X^L

" Keep things centered
nnoremap n nzzzv
nnoremap N Nzzzv
nnoremap J mzJ`z

" Avoid polluting the jumplist with { and }
nnoremap } :keepjumps normal! }<cr>
nnoremap { :keepjumps normal! {<cr>

" TAG JUMPING
" Create the 'tags' file
" command! MakeTags  !ctags -R
" command! MakeTagsExclude !ctags -R --exclude=@.ctagsignore .
" Generate tags based on git
command! MakeTags !git ls-files | ctags -L -

" Disables automatic commenting on newline:
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Splits open at the bottom and right
set splitbelow splitright

" Shortcutting split navigation, saving a keypress:
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" Ensure files are read as what I want:
augroup FiletypeGroup
  autocmd!
  autocmd BufRead,BufNewFile /tmp/calcurse*,~/.calcurse/notes/* set filetype=markdown
  autocmd BufRead,BufNewFile *.ms,*.me,*.mom,*.man set filetype=groff
  autocmd BufRead,BufNewFile *.tex set filetype=tex
  autocmd BufRead,BufNewFile vimrc set filetype=vim
  autocmd BufNewFile,BufRead *.jsx set filetype=javascript,jsx
augroup END

" Highlight on yank
augroup YankHighlight
  autocmd!
  autocmd TextYankPost * silent! lua vim.highlight.on_yank()
augroup end

" Source .vimrc
command! Ref source $RC

" Move lines up and down
nnoremap <Leader>j :m .+1<CR>==
nnoremap <Leader>k :m .-2<CR>==
inoremap <C-j> <esc>:m .+1<CR>==
inoremap <C-k> <esc>:m .-2<CR>==
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv

" Y yanks until the end of line (like D)
nnoremap Y y$

" copy into pasteboard register
nnoremap <leader>y "+y
vnoremap <leader>y "+y
nnoremap <leader>Y gg"+yG

" Surround
let g:surround_45 = "<% \r %>"
let g:surround_61 = "<%= \r %>"

" Set internal encoding of vim, not needed on neovim, since coc.nvim using some
" unicode characters in the file autoload/float.vim
set encoding=utf-8

" TextEdit might fail if hidden is not set.
set hidden

" Some servers have issues with backup files, see #649.
set nobackup
set nowritebackup

" Give more space for displaying messages.
set cmdheight=2

" Having longer updatetime (default is 4000 ms = 4 s) leads to noticeable
" delays and poor user experience.
set updatetime=300
set previewheight=16

" Don't pass messages to |ins-completion-menu|.
set shortmess+=c

" Always show the signcolumn, otherwise it would shift the text each time
" diagnostics appear/become resolved.
if has("nvim-0.5.0") || has("patch-8.1.1564")
  " Recently vim can merge signcolumn and number column into one
  set signcolumn=number
else
  set signcolumn=yes
endif

" Vimspector Plugin
let g:vimspector_enable_mappings = "HUMAN" " Use default keybindings
